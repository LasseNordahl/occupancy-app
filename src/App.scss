@import "globals/occupancy-styles.scss";

.App {
  min-height: 100vh;
  min-width: 100vw;
  background-color: $background;
  color: $fontColor;
  font-family: $font;
  overflow-y: auto;
  display: flex;
  flex-direction: column;

  body {
    transform-origin: 0 0;
    // add prefixed versions too.
  }

  h1              { font-size: 1.8em; margin: .67em 0 }
  h2              { font-size: 1.3em; margin: .75em 0 }
  h3              { font-size: 1.17em; margin: .83em 0 }
  h4              { font-size: 1em; margin: 1em }
  h5              { font-size: .83em; margin: 1.5em 0 }
  h6              { font-size: .75em; margin: 1.67em 0 }

  p               { font-size: .9em; margin: 0}

  h1, h2        { font-weight: bolder }
  h3, h4, h5, h6 {font-weight: 400}

  .app-content-mobile {
    display: none;
    height: calc(100vh - 64px);
  }

  @media only screen and (max-width: 600px) {
    .app-content-mobile {
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
    }
  }

  .app-content {
    flex: 1;
  }

  @media only screen and (max-width: 600px) {
    .app-content {
      display: none;
    }
  }
}

// Animation Helper CSS classes!
.fade-in {
	opacity:0;  /* make things invisible upon start */
	-webkit-animation:fadeIn ease-in 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
	-moz-animation:fadeIn ease-in 1;
	animation:fadeIn ease-in 1;

	-webkit-animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
	-moz-animation-fill-mode:forwards;
	animation-fill-mode:forwards;

	-webkit-animation-duration:1s;
	-moz-animation-duration:1s;
	animation-duration:1s;
}

@keyframes pulse {
  0% {
    background-position: 0% 0%;
  }
  100% {
    background-position: -135% 0%;
  }
}

@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@-moz-keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
